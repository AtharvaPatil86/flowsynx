<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ExpressionParser_OutputNotFound" xml:space="preserve">
    <value>Output '{0}' not found.</value>
  </data>
  <data name="JsonDeserializerValueCanNotBeEmpty" xml:space="preserve">
    <value>Input value can't be empty or null.</value>
  </data>
  <data name="JsonDeserializer_InputValueCanNotBeEmpty" xml:space="preserve">
    <value>Input value can't be empty or null.</value>
  </data>
  <data name="JsonSerializerValueCanNotBeEmpty" xml:space="preserve">
    <value>Input value can't be empty or null.</value>
  </data>
  <data name="JsonSerializer_InputValueCanNotBeEmpty" xml:space="preserve">
    <value>Input value can't be empty or null.</value>
  </data>
  <data name="Logging_Invalid_Property" xml:space="preserve">
    <value>The property '{0}' is not valid!</value>
  </data>
  <data name="PluginDownloader_ErrorInExtractingPackage" xml:space="preserve">
    <value>An error occurred while extracting the package: {0}</value>
  </data>
  <data name="PluginManager_AssociatedPluginConfigIsExist" xml:space="preserve">
    <value>The plugin type '{0}' with version '{1}' has associated configurations. Please remove the existing configuration(s) before proceeding.</value>
  </data>
  <data name="PluginManager_Install_ChecksumValidationFailed" xml:space="preserve">
    <value>Checksum validation failed. Package may be corrupted or tampered with.</value>
  </data>
  <data name="PluginManager_Install_ErrorLoading" xml:space="preserve">
    <value>Error loading {0}: {1}.</value>
  </data>
  <data name="PluginManager_Install_PluginInstalledSuccessfully" xml:space="preserve">
    <value>Plugin '{0}' v{1} installed successfully.</value>
  </data>
  <data name="PluginManager_Install_PluginIsAlreadyExist" xml:space="preserve">
    <value>The plugin type '{0}' with version '{1}' is already exist.</value>
  </data>
  <data name="PluginManager_PluginCouldNotFound" xml:space="preserve">
    <value>The plugin type '{0}' with version '{1}' not found!</value>
  </data>
  <data name="PluginManager_PluginUninstalledSuccessfully" xml:space="preserve">
    <value>'{pluginType}' version '{version}' is uninstalled successfully.</value>
  </data>
  <data name="PluginServiceCouldNotFoundPlugin" xml:space="preserve">
    <value>Plugin {0} could not found!</value>
  </data>
  <data name="PluginTypeService_ConfigurationCouldNotFound" xml:space="preserve">
    <value>Configuration '{0}' could be not found.</value>
  </data>
  <data name="PluginTypeService_PluginCouldNotFound" xml:space="preserve">
    <value>Plugin '{0}' could be not found.</value>
  </data>
  <data name="Plugin_Download_Extraction_AllFilesDeletedSuccessfully" xml:space="preserve">
    <value>All files deleted successfully.</value>
  </data>
  <data name="Plugin_Download_Extraction_DirectoryNotFound" xml:space="preserve">
    <value>Directory not found: '{0}'</value>
  </data>
  <data name="Plugin_Download_Extraction_ErrorDuringDelete" xml:space="preserve">
    <value>Error deleting files: {0}</value>
  </data>
  <data name="Plugin_Download_Extraction_Successfully" xml:space="preserve">
    <value>Plugin successfully extracted to: '{0}'</value>
  </data>
  <data name="Plugin_Download_FailedToFetchDataFromUrl" xml:space="preserve">
    <value>Error {0} {1}. Failed to fetch data from URL.</value>
  </data>
  <data name="Plugin_Download_PluginNotFound" xml:space="preserve">
    <value>No plugin with type '{0}' and version '{1}' found.</value>
  </data>
  <data name="Plugin_Handle_LoadedSuccessfully" xml:space="preserve">
    <value>Plugin loaded successfully.</value>
  </data>
  <data name="Plugin_Loader_FailedToLoadPlugin" xml:space="preserve">
    <value>Failed to load plugin: {0}</value>
  </data>
  <data name="Plugin_Loader_FileNotFound" xml:space="preserve">
    <value>Plugin file not found: {0}</value>
  </data>
  <data name="Plugin_Loader_NoPluginFound" xml:space="preserve">
    <value>No plugin type found.</value>
  </data>
  <data name="RetryService_AttemptFailed" xml:space="preserve">
    <value>Attempt {0} failed: {1}.</value>
  </data>
  <data name="RetryService_OperationFailedAfterAttempts" xml:space="preserve">
    <value>Task '{0}' failed after {1} attempts.</value>
  </data>
  <data name="RetryService_RetryFailedUnexpectedly" xml:space="preserve">
    <value>Retry mechanism failed unexpectedly.</value>
  </data>
  <data name="RetryService_TaskTimeoutOnAttempt" xml:space="preserve">
    <value>Task '{0}' timeout on attempt {1}.</value>
  </data>
  <data name="RetryService_WaitingBeforeRetry" xml:space="preserve">
    <value>Waiting {0}ms before retry...</value>
  </data>
  <data name="RetryService_WorkflowTimeout" xml:space="preserve">
    <value>Workflow execution timeout</value>
  </data>
  <data name="SpecificationsMustHaveValue" xml:space="preserve">
    <value>The specification(s) [{0}] are required and must have value.</value>
  </data>
  <data name="SpecificationsRequiredMemberMustHaveValue" xml:space="preserve">
    <value>The value of '{0}' in specifications is required and must have a value.</value>
  </data>
  <data name="WorkflowOrchestrator_TaskFailed" xml:space="preserve">
    <value>Task '{0}' failed — {1}</value>
  </data>
  <data name="WorkflowValidator_TaskHasNegativeFactor" xml:space="preserve">
    <value>Task '{0}' has negative Factor: '{1}'.</value>
  </data>
  <data name="WorkflowValidator_TaskHasNegativeInitialDelay" xml:space="preserve">
    <value>Task '{0}' has negative Initial Delay: '{1}'.</value>
  </data>
  <data name="WorkflowValidator_TaskHasNegativeMaxDelay" xml:space="preserve">
    <value>Task '{0}' has negative Max Delay: '{1}'</value>
  </data>
  <data name="WorkflowValidator_TaskHasNegativeMaxRetries" xml:space="preserve">
    <value>Task '{0}' has negative MaxRetries: '{1}'.</value>
  </data>
  <data name="Workflow_ExecutionTracker_NoWorkflowExecutionFound" xml:space="preserve">
    <value>The workflow with id '{0}' could not be found.</value>
  </data>
  <data name="Workflow_ExecutionTracker_NoWorkflowTaskExecutionFound" xml:space="preserve">
    <value>The workflow task with name '{0}' could not be found.</value>
  </data>
  <data name="Workflow_Executor_CompletedSuccessfully" xml:space="preserve">
    <value>Workflow execution with Id: '{0}' was completed successfully.</value>
  </data>
  <data name="Workflow_Executor_CyclicDependencies" xml:space="preserve">
    <value>The workflow has cyclic dependencies. Please resolve them and try again!. There are Cyclic: {0}</value>
  </data>
  <data name="Workflow_Executor_DuplicatedTasksName" xml:space="preserve">
    <value>There is a duplicated task name in the workflow tasks.</value>
  </data>
  <data name="Workflow_Executor_ErrorInExecution" xml:space="preserve">
    <value>Workflow execution error: {0}</value>
  </data>
  <data name="Workflow_Executor_FailedDependenciesTask" xml:space="preserve">
    <value>There are failed task in dependencies.</value>
  </data>
  <data name="Workflow_Executor_GetWorkflowFailed" xml:space="preserve">
    <value>Get Workflow failed. Meesage: {0}</value>
  </data>
  <data name="Workflow_Executor_MissingDependencies" xml:space="preserve">
    <value>Invalid workflow: missing dependencies. There are list of missing dependencies: {0}</value>
  </data>
  <data name="Workflow_Executor_NoWorkflowTaskExecutionFoumd" xml:space="preserve">
    <value>No workflow task execution found with name '{0}'</value>
  </data>
  <data name="Workflow_Executor_WorkflowCouldNotBeFound" xml:space="preserve">
    <value>The workflow with id '{0}' could not be found.</value>
  </data>
  <data name="Workflow_Executor_WorkflowInitilizeFailed" xml:space="preserve">
    <value>Initilize WorkflowExecution failed. Meesage: {0}</value>
  </data>
  <data name="Workflow_TimeBased_TriggerProcessor_FailedExecution" xml:space="preserve">
    <value>Failed to execute workflow with ID '{0}' for user '{1}'.</value>
  </data>
  <data name="Workflow_TimeBased_TriggerProcessor_InvalidCornExpression" xml:space="preserve">
    <value>Missing or invalid 'cron' expression for workflow with ID '{0}'.</value>
  </data>
</root>