//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FlowSynx {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FlowSynx.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration Registry.
        /// </summary>
        internal static string AddHealthCheckerConfigurationRegistry {
            get {
                return ResourceManager.GetString("AddHealthCheckerConfigurationRegistry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plugins Registry.
        /// </summary>
        internal static string AddHealthCheckerPluginsRegistry {
            get {
                return ResourceManager.GetString("AddHealthCheckerPluginsRegistry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration registry available.
        /// </summary>
        internal static string ConfigurationManagerHealthCheckConfigurationRegistryAvailable {
            get {
                return ResourceManager.GetString("ConfigurationManagerHealthCheckConfigurationRegistryAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration registry failed.
        /// </summary>
        internal static string ConfigurationManagerHealthCheckConfigurationRegistryFailed {
            get {
                return ResourceManager.GetString("ConfigurationManagerHealthCheckConfigurationRegistryFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something wrong happen during execute the application..
        /// </summary>
        internal static string EntryPointErrorInExecutteApplication {
            get {
                return ResourceManager.GetString("EntryPointErrorInExecutteApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Base location not found.
        /// </summary>
        internal static string FlowSynxLocationBaseLocationNotFound {
            get {
                return ResourceManager.GetString("FlowSynxLocationBaseLocationNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Root location not found.
        /// </summary>
        internal static string FlowSynxLocationRootLocationNotFound {
            get {
                return ResourceManager.GetString("FlowSynxLocationRootLocationNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The EntryAssembly not found. Getting ExecutingAssembly!.
        /// </summary>
        internal static string FlowSynxVersionEntryAssemblyNotFound {
            get {
                return ResourceManager.GetString("FlowSynxVersionEntryAssemblyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error in reading executable application..
        /// </summary>
        internal static string FlowSynxVersionErrorInReadingExecutableApplication {
            get {
                return ResourceManager.GetString("FlowSynxVersionErrorInReadingExecutableApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error in reading executable application path..
        /// </summary>
        internal static string OptionsVerifierErrorInReadingExecutableApplicationPath {
            get {
                return ResourceManager.GetString("OptionsVerifierErrorInReadingExecutableApplicationPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entered config file &apos;{0}&apos; is not exist!.
        /// </summary>
        internal static string OptionsVerifierTheEnteredConfigFileIsNotExist {
            get {
                return ResourceManager.GetString("OptionsVerifierTheEnteredConfigFileIsNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plugins registry available.
        /// </summary>
        internal static string PluginsManagerHealthCheckConfigurationRegistryAvailable {
            get {
                return ResourceManager.GetString("PluginsManagerHealthCheckConfigurationRegistryAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Plugins registry failed.
        /// </summary>
        internal static string PluginsManagerHealthCheckConfigurationRegistryFailed {
            get {
                return ResourceManager.GetString("PluginsManagerHealthCheckConfigurationRegistryFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version service could not be initialized..
        /// </summary>
        internal static string UseCustomHeadersVersionServiceCouldNotBeInitialized {
            get {
                return ResourceManager.GetString("UseCustomHeadersVersionServiceCouldNotBeInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Serializer service could not be initialized..
        /// </summary>
        internal static string UseHealthCheckSerializerServiceCouldNotBeInitialized {
            get {
                return ResourceManager.GetString("UseHealthCheckSerializerServiceCouldNotBeInitialized", resourceCulture);
            }
        }
    }
}
